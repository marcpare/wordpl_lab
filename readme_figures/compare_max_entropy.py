import numpy as np
from numba import njit, prange
from tqdm import tqdm
from lib import clues, word_lists

ws1 = "salet"
w1 = word_lists.valid_words.index(ws1)

c1 = 215

epsilon = 12.0

pd = clues.pd(epsilon)
cwa = clues.cwa()

scores = []

@njit(parallel=True)
def best_third_guess(w1, c1, w2, c2):

    # likelihood of answer a given w1, c1, w2, c2
    lia = np.zeros(word_lists.NAW)
    for a in range(word_lists.NAW):
        lia[a] = pd[c1][cwa[w1][a]] * pd[c2][cwa[w2][a]]
    slia = np.argsort(lia)

    # filter the possible answers to the top 2%
    possible_answers = slia[-int(word_lists.NAW / 50):]

    expected_wins = np.zeros(word_lists.NVW)

    for w3 in prange(word_lists.NVW):
        total_expected_wins = 0
        for c3 in range(3**5):
            bew = 0
            for a in possible_answers:
                bew = max(bew, pd[c1][cwa[w1][a]] * pd[c2][cwa[w2][a]] * pd[c3][cwa[w3][a]])
            total_expected_wins += bew
        expected_wins[w3] = total_expected_wins

    return np.argmax(expected_wins), np.max(expected_wins)

@njit(parallel=True)
def guess_entropies(w1, c1):
    word_entropies = np.zeros(word_lists.NVW)
    for w2 in prange(word_lists.NVW):
        ps = np.zeros(3**5)
        for c2 in range(3**5):
            for a in range(word_lists.NAW):
                ps[c2] += pd[c1][cwa[w1][a]] * pd[c2][cwa[w2][a]]
        ps = ps / np.sum(ps)
        word_entropies[w2] += -np.sum(ps * np.log2(ps))

    return word_entropies

word_entropies = guess_entropies(w1, c1)
# sort by entropy descending
sorted_word_entropies = np.argsort(word_entropies)
sorted_word_entropies = np.flip(sorted_word_entropies)

# for w2 in tqdm(sorted_word_entropies[-100:]):
#     total_wins = 0
#     for c2 in range(3**5):
#         w3, ew = best_third_guess(w1, c1, w2, c2)
#         total_wins += ew

#     scores.append((w2, word_lists.valid_words[w2], total_wins, word_entropies[w2]))

# sort scores by total wins


# scores = [(np.int64(3937), 'teaze', 4.876752575645508, np.float64(4.3394652093471535)), (np.int64(10240), 'tazze', 4.647157072364466, np.float64(4.232003958988804)), (np.int64(5291), 'tazza', 4.768913360516177, np.float64(4.178644767941671)), (np.int64(11796), 'taata', 4.979532034459437, np.float64(4.290880453928701)), (np.int64(7075), 'qajaq', 4.814256819599137, np.float64(4.137760891727804)), (np.int64(9953), 'mezze', 5.40069625009898, np.float64(4.359302403633542)), (np.int64(9874), 'jeeze', 4.845835441804658, np.float64(4.203677486817874)), (np.int64(2073), 'jaffa', 5.172562672359164, np.float64(4.331505708337489)), (np.int64(1576), 'feeze', 5.1242959457943185, np.float64(4.3335435703282155)), (np.int64(7826), 'exeat', 4.877134888856744, np.float64(4.331089430539682))]
# scores = [(np.int64(1576), 'feeze', 6.7055251155323425, np.float64(4.337677351140295)), (np.int64(479), 'bevel', 6.501215512780365, np.float64(4.446463595302456)), (np.int64(2298), 'level', 6.484529968092194, np.float64(4.371328379762739)), (np.int64(11490), 'ettle', 6.46052881741039, np.float64(4.43624779824535)), (np.int64(7063), 'bezel', 6.430291938602844, np.float64(4.395168407131195)), (np.int64(5646), 'jebel', 6.422599110488387, np.float64(4.385190747853971)), (np.int64(12612), 'levee', 6.387765635967825, np.float64(4.363027228458722)), (np.int64(3739), 'leeze', 6.344278986218114, np.float64(4.315704211918697)), (np.int64(9874), 'jeeze', 6.33585172694843, np.float64(4.220885274885969)), (np.int64(7088), 'telex', 6.197534552522162, np.float64(4.359526640447314))]
# scores = [(np.int64(3226), 'susus', 12.545908041737322, np.float64(4.603525859925095)), (np.int64(7855), 'jujus', 12.205555500435443, np.float64(4.54274015351887)), (np.int64(11256), 'wexes', 12.178824126569268, np.float64(4.573176103946248)), (np.int64(7149), 'xysts', 12.006227159892266, np.float64(4.511802227640032)), (np.int64(1576), 'feeze', 11.943039987749088, np.float64(4.5307322314681615)), (np.int64(1065), 'jeeps', 11.830687235315056, np.float64(4.572794905210651)), (np.int64(5216), 'epees', 11.695970667342824, np.float64(4.599236299017338)), (np.int64(1023), 'justs', 11.686028678009526, np.float64(4.480542375716887)), (np.int64(2298), 'level', 11.661711369381356, np.float64(4.584374753186857)), (np.int64(7058), 'lulls', 11.61363767589988, np.float64(4.582086868016826)), (np.int64(5375), 'fezes', 11.612124221828827, np.float64(4.541926700094365)), (np.int64(8300), 'lezzy', 11.54756063813683, np.float64(4.602548095400524)), (np.int64(12778), 'fesse', 11.47667305270381, np.float64(4.572670642081291)), (np.int64(10893), 'vexes', 11.459687758944904, np.float64(4.513210815058949)), (np.int64(1946), 'lusts', 11.456291648066303, np.float64(4.5860949033602685)), (np.int64(4873), 'swees', 11.417020542422293, np.float64(4.567686261577959)), (np.int64(9334), 'tweet', 11.292007670070314, np.float64(4.5657934798154285)), (np.int64(11625), 'sluts', 11.263492991792619, np.float64(4.582547679765229)), (np.int64(4715), 'weete', 11.225010748903548, np.float64(4.583421288379966)), (np.int64(9863), 'jesus', 11.195119618272644, np.float64(4.5541298128655185)), (np.int64(3098), 'weets', 11.190440326566975, np.float64(4.595536866729063)), (np.int64(7179), 'weest', 11.170054470019963, np.float64(4.598538275765038)), (np.int64(4832), 'suses', 11.162868350827146, np.float64(4.581228766379813)), (np.int64(6684), 'eques', 11.159210786980058, np.float64(4.600396334596603)), (np.int64(10760), 'vells', 11.153477380792037, np.float64(4.554089804913552)), (np.int64(6460), 'fells', 11.12866189142921, np.float64(4.598113548395303)), (np.int64(2783), 'jewel', 11.097424184651894, np.float64(4.566038443205131)), (np.int64(7972), 'selfs', 11.081095518597895, np.float64(4.567548331004284)), (np.int64(12344), 'spets', 11.050445508106879, np.float64(4.581649302105836)), (np.int64(6945), 'kests', 11.04912502126351, np.float64(4.587946752653927)), (np.int64(6239), 'jefes', 11.036829210788813, np.float64(4.509639643323718)), (np.int64(9345), 'feese', 11.033829341111485, np.float64(4.573558496919828)), (np.int64(8117), 'pests', 11.029958232333334, np.float64(4.585234531166118)), (np.int64(10688), 'steps', 11.020299675766108, np.float64(4.576334061955631)), (np.int64(12612), 'levee', 10.996190887845486, np.float64(4.562129616745618)), (np.int64(8446), 'skets', 10.975391215629084, np.float64(4.577056802199405)), (np.int64(6202), 'jetty', 10.947388221287756, np.float64(4.561644488997664)), (np.int64(5719), 'jeffs', 10.922245169117454, np.float64(4.519101558635485)), (np.int64(8289), 'sekts', 10.900264572573814, np.float64(4.580037403604761)), (np.int64(2356), 'stept', 10.892000609699306, np.float64(4.575554086688831)), (np.int64(5993), 'slews', 10.886931525787466, np.float64(4.587968642328242)), (np.int64(6607), 'septs', 10.87930101594555, np.float64(4.575169825941738)), (np.int64(4629), 'sweet', 10.831070581141947, np.float64(4.585642510328706)), (np.int64(6135), 'fetes', 10.817522700894076, np.float64(4.578429662593204)), (np.int64(5381), 'etwee', 10.802855278914521, np.float64(4.549769190156734)), (np.int64(5505), 'wests', 10.775824321728287, np.float64(4.537613731036194)), (np.int64(5631), 'stews', 10.77417931903777, np.float64(4.536462988883474)), (np.int64(2310), 'ewest', 10.73312370911174, np.float64(4.574632843838292)), (np.int64(3531), 'jutes', 10.68510480284401, np.float64(4.584466875151191)), (np.int64(5969), 'quest', 10.681173699153494, np.float64(4.596748726683823)), (np.int64(3734), 'veles', 10.66513897723453, np.float64(4.580861424580206)), (np.int64(11494), 'teffs', 10.608519834641537, np.float64(4.579626996967466)), (np.int64(2963), 'fests', 10.528215339280777, np.float64(4.5223415567373175)), (np.int64(6038), 'leves', 10.515799430984881, np.float64(4.573775303020006)), (np.int64(129), 'fetts', 10.487803438955975, np.float64(4.52300131638377)), (np.int64(7982), 'evets', 10.439017350129744, np.float64(4.517072339009206)), (np.int64(11530), 'zexes', 10.326085309799202, np.float64(4.3982201323755925)), (np.int64(7748), 'felts', 10.311159699607874, np.float64(4.589465045565352)), (np.int64(11273), 'lefts', 10.298229539103172, np.float64(4.5789920413172585)), (np.int64(9778), 'vests', 10.286565953902183, np.float64(4.477813739448374)), (np.int64(7296), 'elves', 10.187943279642997, np.float64(4.56000346306714)), (np.int64(7832), 'swelt', 10.157847323136515, np.float64(4.599810474080792)), (np.int64(9271), 'sexes', 10.031453264229329, np.float64(4.421562020645451)), (np.int64(7088), 'telex', 9.778259728526553, np.float64(4.4815378872115845)), (np.int64(3739), 'leeze', 9.762749561953576, np.float64(4.454206552710708)), (np.int64(9874), 'jeeze', 9.743100357423396, np.float64(4.348846323888767)), (np.int64(3131), 'jesse', 9.577484684006897, np.float64(4.390936951854917)), (np.int64(7262), 'selle', 9.539239400205716, np.float64(4.523942797640631)), (np.int64(5957), 'zezes', 9.429082841478657, np.float64(4.37338980207414)), (np.int64(1306), 'seels', 9.410564950440206, np.float64(4.490577496267453)), (np.int64(3519), 'texes', 9.367601248501147, np.float64(4.436870502335685)), (np.int64(10020), 'lezes', 9.36622608681679, np.float64(4.465416017165273)), (np.int64(5374), 'lexes', 9.356937521224925, np.float64(4.481448939072671)), (np.int64(4565), 'seles', 9.30232001310321, np.float64(4.489264678367669)), (np.int64(10900), 'leses', 9.272189348176326, np.float64(4.481803201785474)), (np.int64(2884), 'sells', 9.260091123123273, np.float64(4.462510548001254)), (np.int64(9117), 'sexts', 9.191266432520901, np.float64(4.385812216704004)), (np.int64(12953), 'teste', 9.135509837658894, np.float64(4.449634670789595)), (np.int64(7693), 'zests', 9.107864901007305, np.float64(4.3628457991394285)), (np.int64(881), 'texts', 9.098487219290774, np.float64(4.384209959643002)), (np.int64(11490), 'ettle', 9.066792326852052, np.float64(4.468973064190486)), (np.int64(12556), 'jeels', 9.025647160663844, np.float64(4.445123247134782)), (np.int64(5180), 'tetes', 8.982568254233335, np.float64(4.439843543622718)), (np.int64(11722), 'esses', 8.97220287903118, np.float64(4.363717313745825)), (np.int64(10539), 'jells', 8.90532263606129, np.float64(4.417012497043479)), (np.int64(9706), 'leese', 8.761083166775018, np.float64(4.497079121381363)), (np.int64(10350), 'jetes', 8.75630475389589, np.float64(4.396615633710611)), (np.int64(11936), 'setts', 8.709597587969881, np.float64(4.3868186970094465)), (np.int64(9085), 'stell', 8.684950941738855, np.float64(4.481935271992941)), (np.int64(6612), 'tests', 8.676689249741525, np.float64(4.384417905839416)), (np.int64(3832), 'stets', 8.673014361405851, np.float64(4.380541980293683)), (np.int64(1498), 'leets', 8.653445787546172, np.float64(4.503749609121129)), (np.int64(134), 'teels', 8.645714955704063, np.float64(4.505900209729842)), (np.int64(7436), 'stele', 8.618936172883725, np.float64(4.508103914975022)), (np.int64(10797), 'tells', 8.602988789390535, np.float64(4.477785817043926)), (np.int64(12701), 'teles', 8.566587039703977, np.float64(4.504555009726114)), (np.int64(8679), 'jests', 8.461542833075038, np.float64(4.340597657726177)), (np.int64(8681), 'steel', 8.42805999163449, np.float64(4.501071574728942)), (np.int64(767), 'sleet', 8.427975721142854, np.float64(4.504221210157323)), (np.int64(6827), 'lests', 8.179939955175028, np.float64(4.445963660132243))]
# scores = [(np.int64(7768), 'fezzy', 7.496253677056476, np.float64(4.507370509554745)), (np.int64(6113), 'bezzy', 7.465172656689095, np.float64(4.536913682599984)), (np.int64(12110), 'fedex', 7.337393664258015, np.float64(4.532344065388935)), (np.int64(8300), 'lezzy', 7.276297945033079, np.float64(4.485882239419326)), (np.int64(372), 'deeve', 7.176378686130452, np.float64(4.536134946529281)), (np.int64(6519), 'fjeld', 7.132557373774178, np.float64(4.540552338423279)), (np.int64(10262), 'vexed', 7.050049672087702, np.float64(4.490767392986113)), (np.int64(2783), 'jewel', 6.934958247851681, np.float64(4.503827179860226)), (np.int64(9854), 'gelee', 6.829141117434599, np.float64(4.514933584727695)), (np.int64(1576), 'feeze', 6.7055251155323425, np.float64(4.337677351140295)), (np.int64(4205), 'ebbet', 6.6987667186026325, np.float64(4.484682315110635)), (np.int64(4071), 'belle', 6.659231071720409, np.float64(4.473887324704436)), (np.int64(81), 'lefte', 6.606372616071634, np.float64(4.4720600692857495)), (np.int64(2492), 'fleet', 6.59475295150501, np.float64(4.474410398456691)), (np.int64(5579), 'belee', 6.532527104126666, np.float64(4.453985266702882)), (np.int64(8407), 'vitex', 6.532033341731399, np.float64(4.539532192588255)), (np.int64(479), 'bevel', 6.501215512780365, np.float64(4.446463595302456)), (np.int64(2947), 'vexil', 6.496045870408851, np.float64(4.533012250197025)), (np.int64(2298), 'level', 6.484529968092194, np.float64(4.371328379762739)), (np.int64(11490), 'ettle', 6.46052881741039, np.float64(4.43624779824535)), (np.int64(12805), 'betel', 6.444043979181106, np.float64(4.4965143025715655)), (np.int64(7063), 'bezel', 6.430291938602844, np.float64(4.395168407131195)), (np.int64(5646), 'jebel', 6.422599110488387, np.float64(4.385190747853971)), (np.int64(781), 'zizel', 6.4133789474776535, np.float64(4.472798793899134)), (np.int64(12612), 'levee', 6.387765635967825, np.float64(4.363027228458722)), (np.int64(3739), 'leeze', 6.344278986218114, np.float64(4.315704211918697)), (np.int64(9874), 'jeeze', 6.33585172694843, np.float64(4.220885274885969)), (np.int64(7088), 'telex', 6.197534552522162, np.float64(4.359526640447314)), (np.int64(11623), 'javel', 6.1696593891763305, np.float64(4.550794005455474)), (np.int64(10240), 'tazze', 6.1208173150358585, np.float64(4.520392821210743))]
# [(np.int64(10109), 'keeve', 7.903856411533031, np.float64(4.654272475685065)), (np.int64(8549), 'neeze', 7.856302504205585, np.float64(4.635441997031347)), (np.int64(2357), 'exeem', 7.797984581980247, np.float64(4.651808162015087)), (np.int64(6591), 'bevvy', 7.7141213456174125, np.float64(4.631549523172515)), (np.int64(9840), 'xylyl', 7.710945374626063, np.float64(4.573364935137826)), (np.int64(7891), 'heeze', 7.626780889175031, np.float64(4.639714031274585)), (np.int64(9953), 'mezze', 7.595352721194071, np.float64(4.5694167672515995)), (np.int64(7768), 'fezzy', 7.496253677056476, np.float64(4.507370509554745)), (np.int64(3514), 'ebbed', 7.483160422428634, np.float64(4.6511619314261345)), (np.int64(6113), 'bezzy', 7.465172656689095, np.float64(4.536913682599984)), (np.int64(3214), 'effed', 7.440205760533027, np.float64(4.598724190283249)), (np.int64(6742), 'jelly', 7.437376279267744, np.float64(4.551087638912304)), (np.int64(9390), 'jeely', 7.435788813678771, np.float64(4.5818284381038525)), (np.int64(7771), 'jazzy', 7.433278978656935, np.float64(4.597926121089631)), (np.int64(3525), 'wefte', 7.433212466155586, np.float64(4.645049709183264)), (np.int64(6202), 'jetty', 7.420773170848785, np.float64(4.560828738204891)), (np.int64(4351), 'feted', 7.411174019063013, np.float64(4.64661961722875)), (np.int64(6950), 'expel', 7.36519888943948, np.float64(4.651813617406241)), (np.int64(9334), 'tweet', 7.338513240621724, np.float64(4.626375749995862)), (np.int64(12110), 'fedex', 7.337393664258015, np.float64(4.532344065388935)), (np.int64(8970), 'fluff', 7.323091467696046, np.float64(4.577121255183098)), (np.int64(10513), 'elfed', 7.311446150688516, np.float64(4.6232849066308415)), (np.int64(8332), 'debel', 7.286658555980273, np.float64(4.649754342418298)), (np.int64(11430), 'fuzee', 7.283224908885643, np.float64(4.593062697162651)), (np.int64(8300), 'lezzy', 7.276297945033079, np.float64(4.485882239419326)), (np.int64(786), 'bedel', 7.264669157779217, np.float64(4.648743062027232)), (np.int64(8474), 'bevue', 7.242546910582524, np.float64(4.649397432281086)), (np.int64(9165), 'delft', 7.230300844186114, np.float64(4.634443236323024)), (np.int64(372), 'deeve', 7.176378686130452, np.float64(4.536134946529281)), (np.int64(11621), 'zebub', 7.175313456073436, np.float64(4.578622987057716)), (np.int64(6519), 'fjeld', 7.132557373774178, np.float64(4.540552338423279)), (np.int64(5688), 'flexo', 7.128764910947952, np.float64(4.612360047819795)), (np.int64(12201), 'legge', 7.116254353002295, np.float64(4.595302662629447)), (np.int64(4715), 'weete', 7.115177541543698, np.float64(4.591191815098144)), (np.int64(4105), 'villi', 7.105287407380701, np.float64(4.644810578178924)), (np.int64(4732), 'quell', 7.105131405119724, np.float64(4.594579791290643)), (np.int64(2420), 'flitt', 7.100125267319337, np.float64(4.6330898885767215)), (np.int64(5405), 'tweel', 7.098071991543687, np.float64(4.640506950657332)), (np.int64(10524), 'delve', 7.095740011681275, np.float64(4.573471059964671)), (np.int64(9025), 'devel', 7.08366050357457, np.float64(4.564611250897735)), (np.int64(5381), 'etwee', 7.060191866504134, np.float64(4.57241064748918)), (np.int64(5232), 'glitz', 7.059696230716305, np.float64(4.640766772364428)), (np.int64(11445), 'tutee', 7.055541110011723, np.float64(4.650548325513922)), (np.int64(10262), 'vexed', 7.050049672087702, np.float64(4.490767392986113)), (np.int64(11637), 'volve', 7.022577549696104, np.float64(4.6266388882682525)), (np.int64(9041), 'tewel', 6.979704060406492, np.float64(4.6118021200105845)), (np.int64(447), 'glebe', 6.973803327684898, np.float64(4.607230246585275)), (np.int64(3298), 'objet', 6.957755443266715, np.float64(4.6328692697276015)), (np.int64(3391), 'voxel', 6.956349505460984, np.float64(4.589362079565492)), (np.int64(1658), 'zizit', 6.941700399618814, np.float64(4.55370039570441)), (np.int64(1451), 'tulle', 6.941492489370405, np.float64(4.647564197203323)), (np.int64(2783), 'jewel', 6.934958247851681, np.float64(4.503827179860226)), (np.int64(1412), 'jello', 6.919603956706201, np.float64(4.557214279011491)), (np.int64(7892), 'beget', 6.90318947424681, np.float64(4.613816801784896)), (np.int64(3691), 'veldt', 6.87399315943823, np.float64(4.5818558661924245)), (np.int64(9854), 'gelee', 6.829141117434599, np.float64(4.514933584727695)), (np.int64(1619), 'exfil', 6.82298516940199, np.float64(4.584232158907735)), (np.int64(8588), 'vibex', 6.800608031088725, np.float64(4.574739972888382)), (np.int64(6470), 'flexi', 6.796091944529254, np.float64(4.581740563375144)), (np.int64(11862), 'zlote', 6.784246257340168, np.float64(4.637490770145104)), (np.int64(2509), 'evite', 6.766568775250694, np.float64(4.634420887995385)), (np.int64(423), 'extol', 6.744800476539225, np.float64(4.625774182249239)), (np.int64(3381), 'zibet', 6.72448936326442, np.float64(4.623656429037078)), (np.int64(5026), 'exult', 6.717876114960145, np.float64(4.579086043807872)), (np.int64(1576), 'feeze', 6.7055251155323425, np.float64(4.337677351140295)), (np.int64(8000), 'blitz', 6.699358700232308, np.float64(4.584774283631024)), (np.int64(4205), 'ebbet', 6.6987667186026325, np.float64(4.484682315110635)), (np.int64(4415), 'gleet', 6.694555612342386, np.float64(4.564988912266403)), (np.int64(11810), 'lieve', 6.693471553817085, np.float64(4.627373695608862)), (np.int64(552), 'bezil', 6.6852298609271035, np.float64(4.6168959708710915)), (np.int64(10893), 'vexes', 6.675188227619883, np.float64(4.6351115911719685)), (np.int64(4071), 'belle', 6.659231071720409, np.float64(4.473887324704436)), (np.int64(1640), 'exile', 6.643325119042997, np.float64(4.577349857525585)), (np.int64(3688), 'title', 6.62802940335931, np.float64(4.646693244132292)), (np.int64(81), 'lefte', 6.606372616071634, np.float64(4.4720600692857495)), (np.int64(2307), 'eejit', 6.59729460576488, np.float64(4.5687235904799)), (np.int64(2492), 'fleet', 6.59475295150501, np.float64(4.474410398456691)), (np.int64(5579), 'belee', 6.532527104126666, np.float64(4.453985266702882)), (np.int64(8407), 'vitex', 6.532033341731399, np.float64(4.539532192588255)), (np.int64(11530), 'zexes', 6.531081102715535, np.float64(4.584668084702544)), (np.int64(479), 'bevel', 6.501215512780365, np.float64(4.446463595302456)), (np.int64(2947), 'vexil', 6.496045870408851, np.float64(4.533012250197025)), (np.int64(5957), 'zezes', 6.493986771061808, np.float64(4.578574065342787)), (np.int64(2298), 'level', 6.484529968092194, np.float64(4.371328379762739)), (np.int64(11490), 'ettle', 6.46052881741039, np.float64(4.43624779824535)), (np.int64(12805), 'betel', 6.444043979181106, np.float64(4.4965143025715655)), (np.int64(7063), 'bezel', 6.430291938602844, np.float64(4.395168407131195)), (np.int64(5646), 'jebel', 6.422599110488387, np.float64(4.385190747853971)), (np.int64(781), 'zizel', 6.4133789474776535, np.float64(4.472798793899134)), (np.int64(10539), 'jells', 6.412000577591751, np.float64(4.64164446908491)), (np.int64(12612), 'levee', 6.387765635967825, np.float64(4.363027228458722)), (np.int64(2641), 'valve', 6.376664550623014, np.float64(4.600451489378074)), (np.int64(8769), 'ixtle', 6.374720333387804, np.float64(4.557921265430676)), (np.int64(4267), 'lezza', 6.360771075677942, np.float64(4.5784045765257835)), (np.int64(3739), 'leeze', 6.344278986218114, np.float64(4.315704211918697)), (np.int64(9874), 'jeeze', 6.33585172694843, np.float64(4.220885274885969)), (np.int64(7088), 'telex', 6.197534552522162, np.float64(4.359526640447314)), (np.int64(11623), 'javel', 6.1696593891763305, np.float64(4.550794005455474)), (np.int64(10240), 'tazze', 6.1208173150358585, np.float64(4.520392821210743)), (np.int64(5810), 'latex', 6.119516092639362, np.float64(4.608739906481108))]
scores = [(np.int64(11298), 'walla', 10.362625165437723, np.float64(4.6091248901634145)), (np.int64(2783), 'jewel', 10.272251811319705, np.float64(4.630295247680423)), (np.int64(7771), 'jazzy', 9.854278360885122, np.float64(4.515780396465447)), (np.int64(8827), 'abaft', 9.817659316581855, np.float64(4.6326330283236015)), (np.int64(9822), 'pzazz', 9.646544289945531, np.float64(4.485195593933697)), (np.int64(241), 'llama', 9.605603498463614, np.float64(4.577926516179338)), (np.int64(2073), 'jaffa', 9.550428318606798, np.float64(4.469335344816899)), (np.int64(4264), 'algal', 9.462625553246522, np.float64(4.568649371613073)), (np.int64(9263), 'labda', 9.452958445556758, np.float64(4.6317686624470635)), (np.int64(5108), 'waltz', 9.449826831047798, np.float64(4.576475608377516)), (np.int64(10130), 'flaff', 9.405162390909283, np.float64(4.550816849073775)), (np.int64(9953), 'mezze', 9.364845351770047, np.float64(4.525108889859375)), (np.int64(9132), 'exeme', 9.351313929914614, np.float64(4.577053325187247)), (np.int64(9171), 'talma', 9.344541871538658, np.float64(4.630925977819439)), (np.int64(4275), 'agave', 9.326350375465488, np.float64(4.633203929604354)), (np.int64(1576), 'feeze', 9.311908168610769, np.float64(4.526644907077506)), (np.int64(2357), 'exeem', 9.2793512364624, np.float64(4.573718563833253)), (np.int64(199), 'tamal', 9.257422817280604, np.float64(4.6312767557526024)), (np.int64(1958), 'vagal', 9.20443445062712, np.float64(4.550052361770573)), (np.int64(8442), 'amaze', 9.195400396703711, np.float64(4.618878210253871)), (np.int64(6761), 'gazal', 9.19182478061658, np.float64(4.5122963784723895)), (np.int64(5243), 'malva', 9.170551534224785, np.float64(4.546180982955819)), (np.int64(9651), 'feaze', 9.166206467295371, np.float64(4.585259412488344)), (np.int64(372), 'deeve', 9.146174207086187, np.float64(4.604517245188825)), (np.int64(10143), 'matza', 9.14023316667121, np.float64(4.542435367795759)), (np.int64(6143), 'malax', 9.116836594952783, np.float64(4.510260986841903)), (np.int64(4071), 'belle', 9.084482641438697, np.float64(4.5814260621185054)), (np.int64(3596), 'agaze', 9.076629748596588, np.float64(4.596479877688669)), (np.int64(4205), 'ebbet', 9.074865537603715, np.float64(4.616591802778275)), (np.int64(8074), 'galax', 9.046725734146184, np.float64(4.508073681741956)), (np.int64(12381), 'fatal', 8.961332739959788, np.float64(4.5631925779145135)), (np.int64(5579), 'belee', 8.949005118225006, np.float64(4.587286288621023)), (np.int64(12944), 'flava', 8.946410307886165, np.float64(4.482120693848662)), (np.int64(3926), 'batta', 8.906750743903238, np.float64(4.527419308083852)), (np.int64(10524), 'delve', 8.905075959125227, np.float64(4.618921105883369)), (np.int64(1951), 'adzed', 8.901762272310584, np.float64(4.629226642995194)), (np.int64(9025), 'devel', 8.877349110010112, np.float64(4.617922175634198)), (np.int64(1044), 'falaj', 8.872272052229084, np.float64(4.44298711965211)), (np.int64(7063), 'bezel', 8.830573727151597, np.float64(4.513509830504736)), (np.int64(1529), 'fella', 8.802782782949281, np.float64(4.597741104956004)), (np.int64(11248), 'addax', 8.789457771936528, np.float64(4.500145542501012)), (np.int64(479), 'bevel', 8.761147146842424, np.float64(4.549918109530843)), (np.int64(12805), 'betel', 8.753630863618667, np.float64(4.631475320509054)), (np.int64(5646), 'jebel', 8.747413983514212, np.float64(4.505433848583371)), (np.int64(3876), 'aflaj', 8.73988273386945, np.float64(4.419955368107772)), (np.int64(10262), 'vexed', 8.715367897290102, np.float64(4.534877740131331)), (np.int64(12782), 'abele', 8.714846810431803, np.float64(4.629500237865657)), (np.int64(2671), 'albee', 8.657888149721506, np.float64(4.63456637752242)), (np.int64(531), 'favel', 8.636098679029105, np.float64(4.5769459448508325)), (np.int64(9607), 'glaze', 8.62735148797667, np.float64(4.610353371494536)), (np.int64(857), 'babel', 8.623251539500663, np.float64(4.621007167039024)), (np.int64(12706), 'datal', 8.556810477852382, np.float64(4.605705315564409)), (np.int64(6466), 'abate', 8.521399577539606, np.float64(4.628556621889388)), (np.int64(811), 'blatt', 8.427275508821065, np.float64(4.5428099585285215)), (np.int64(964), 'tabla', 8.424284038797202, np.float64(4.5272024401860795)), (np.int64(8349), 'betta', 8.396566025653833, np.float64(4.619187269308079)), (np.int64(12620), 'label', 8.363502470097943, np.float64(4.567158194086081)), (np.int64(12612), 'levee', 8.35174780389859, np.float64(4.460981192985831)), (np.int64(2298), 'level', 8.348810022209493, np.float64(4.44914877657568)), (np.int64(3739), 'leeze', 8.29384255290775, np.float64(4.424159592375203)), (np.int64(5947), 'taxed', 8.291136743849401, np.float64(4.618229232846701)), (np.int64(5124), 'laved', 8.29099497208558, np.float64(4.623384095581532)), (np.int64(11796), 'taata', 8.230507140080812, np.float64(4.422135363275055)), (np.int64(11490), 'ettle', 8.184569632918684, np.float64(4.5456343338813365)), (np.int64(5765), 'allee', 8.179504045231106, np.float64(4.546314560176624)), (np.int64(2354), 'lazed', 8.087467563123598, np.float64(4.586394058476569)), (np.int64(3234), 'axled', 8.085718297044195, np.float64(4.5799510531843675)), (np.int64(9529), 'jelab', 8.070069726640053, np.float64(4.5057883890895605)), (np.int64(7600), 'leave', 8.066506051268298, np.float64(4.519091505308105)), (np.int64(3691), 'veldt', 8.058216350015213, np.float64(4.607943591231126)), (np.int64(8824), 'blaze', 8.049512850430299, np.float64(4.517626242476511)), (np.int64(8897), 'veale', 8.03260903058883, np.float64(4.521939611449763)), (np.int64(4935), 'laxed', 8.030802670621375, np.float64(4.582847523850753)), (np.int64(9874), 'jeeze', 7.997741185511378, np.float64(4.339716315116612)), (np.int64(1813), 'bleat', 7.970855392338714, np.float64(4.633078248301224)), (np.int64(3411), 'ablet', 7.956106807101769, np.float64(4.6222755439375325)), (np.int64(2828), 'blate', 7.951330642892209, np.float64(4.638352496031322)), (np.int64(4618), 'leaze', 7.930808254984148, np.float64(4.48278101697672)), (np.int64(4033), 'table', 7.910316062771832, np.float64(4.627982791667185)), (np.int64(10523), 'laval', 7.85260202909395, np.float64(4.355655117798714)), (np.int64(12154), 'telae', 7.820471849685985, np.float64(4.59955873005625)), (np.int64(7075), 'qajaq', 7.7921816681741145, np.float64(4.199797908980751)), (np.int64(3937), 'teaze', 7.771442598260895, np.float64(4.518279082534072)), (np.int64(2421), 'elate', 7.739504024924402, np.float64(4.590181700469408)), (np.int64(7088), 'telex', 7.724791888474957, np.float64(4.467694789903697)), (np.int64(2641), 'valve', 7.7074934079391815, np.float64(4.419879816544391)), (np.int64(2325), 'talaq', 7.7011545811199005, np.float64(4.393138765706085)), (np.int64(5291), 'tazza', 7.665870445180963, np.float64(4.286759216951622)), (np.int64(7442), 'allel', 7.659299546146374, np.float64(4.449750559859004)), (np.int64(7069), 'avale', 7.615764658503219, np.float64(4.4802838384614425)), (np.int64(7826), 'exeat', 7.562802704451176, np.float64(4.489689087263993)), (np.int64(8684), 'alate', 7.511283016192266, np.float64(4.565114906870198)), (np.int64(9015), 'latte', 7.458056009480199, np.float64(4.551252576645675)), (np.int64(5810), 'latex', 7.446005209658355, np.float64(4.466143367351707)), (np.int64(5178), 'talea', 7.432764596841343, np.float64(4.558403058859853)), (np.int64(11623), 'javel', 7.422284676272362, np.float64(4.38956852944443)), (np.int64(7037), 'exalt', 7.416838121417218, np.float64(4.464148166489137)), (np.int64(11966), 'valet', 7.4057585559071075, np.float64(4.514087385054692)), (np.int64(4267), 'lezza', 7.360974649804707, np.float64(4.342678950571367)), (np.int64(10240), 'tazze', 7.294928639095018, np.float64(4.387313969985652))]

scores.sort(key=lambda x: x[2], reverse=True)

print(scores)

x = list(range(len(scores)))
y1 = [s[2] for s in scores]
y2 = [s[3] for s in scores]
labels = [s[1] for s in scores]


import matplotlib.pyplot as plt
import plotly.express as px
import plotly.graph_objects as go
template = "plotly_dark"
import pandas as pd

df = pd.DataFrame(scores, columns=["w2", "word", "score", "entropy"])
df["data_point"] = range(len(df))

# Create the dual-axis plot with Plotly
fig = go.Figure()

# label the x axis with the word
fig.update_xaxes(tickmode="array", tickvals=df["data_point"], ticktext=labels, tickfont=dict(size=7))

# rotate the x axis label to 45 degrees
fig.update_xaxes(tickangle=-45)

# Add the score trace
fig.add_trace(go.Scatter(x=x, y=y1, 
                         mode="lines+markers", name="Score", 
                         yaxis="y1"))

# Add the entropy trace
fig.add_trace(go.Scatter(x=x, y=y2, 
                         mode="lines+markers", name="Entropy", 
                         yaxis="y2", line=dict(color="orange", dash="dash")))

# draw a green circle around the maximum clue entropy value
max_entropy_idx = np.argmax(y2)
max_entropy = y2[max_entropy_idx]
max_entropy_word = labels[max_entropy_idx]

fig.add_trace(go.Scatter(
    x=[max_entropy_idx],
    y=[max_entropy],
    mode='markers',
    marker=dict(
        size=15,
        color='#00CC96',
        symbol='circle-open',
        line=dict(width=2)
    ),
    showlegend=False,
    name=f'Max Entropy: {max_entropy_word} ({max_entropy:.2f})',
    yaxis='y2'
))

# Update the layout for dual y-axes
fig.update_layout(
    title=dict(
        text="Scores and Entropies",
        x=0.5,  # Center horizontally
        xanchor='center'  # Anchor point for x position
    ),
    template="plotly_dark",
    xaxis_title="Second Guess Word",
    yaxis=dict(title=dict(text="Expected Wins")),
    yaxis2=dict(title=dict(text="Clue Entropy"), overlaying="y", side="right"),
    legend_title="Metric",
    legend=dict(
        x=0.98,  # Position from left (0 to 1)
        y=0.98,  # Position from bottom (0 to 1)
        xanchor='right',  # Anchor point for x position
        bgcolor="rgba(0,0,0,0.5)",  # Semi-transparent background
        bordercolor="rgba(255,255,255,0.2)",  # Light border
        borderwidth=1
    )
)

fig.update_layout(font=dict(family="-apple-system, BlinkMacSystemFont, 'Helvetica Neue', Arial"))


# Show the plot
fig.show()


# plot the scores and entropies.
# the x axis is data point per score
# the y axis is dual axis. One for score and one for entropy
